# BACKEND module deployment workflow
name: "CD Pipeline BACK"

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: "Image Name"
        required: false
        default: lh-maz-pop-back
        type: string
      tag_name:
        description: "Tag Name"
        required: false
        default: pop-back
        type: string

jobs:
  # call semantic version reusable workflow
  versioning:
    name: CD
    uses: ./.github/workflows/reusable_semversion.yml
    with:
      tag_prefix: ${{ inputs.tag_name }}/v
      tag_release: false
      module_path: ./src/api/backend/
    secrets:
      GIT_TOKEN: ${{ secrets.TOKEN_PROTECTED_TAG }}

  build_and_push:
    name: CD / Publish Docker Image
    runs-on: ubuntu-22.04
    needs: versioning
    permissions:
      contents: read
      packages: write

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Extract Docker Image Name
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          tags: |
            type=match,pattern=${{ inputs.tag_name }}/v(\d.\d.\d),group=1
            type=sha
            type=raw, value=${{ needs.versioning.outputs.sem_version }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./src/api/
      #     file: ./src/api/Dockerfile
      #     load: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:sha-${GITHUB_SHA::7}
      #     cache-to: type=inline

      # - name: Test Docker image
      #   run: |
      #     docker run --rm -d \
      #     -e SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }} \
      #     -e SQLALCHEMY_DATABASE_FOR_TESTING_URL=${{ secrets.SQLALCHEMY_DATABASE_FOR_TESTING_URL }} \
      #     ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:sha-${GITHUB_SHA::7}

      # - name: Push docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./src/api/
      #     file: ./src/api/Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
