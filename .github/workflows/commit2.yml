name: "Commit Message Check"
on:
  pull_request:
    branches:
      - main

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      # clones current repository
      - name: Checkout current repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check Subject Message Type
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: "^AB#[0-9]+ (feat|fix|test|docs|chore|style|refactor|ci|cd).*"
          error: 'You need to follow conventional commit type "feat|fix|test|docs|chore|style|refactor|ci|cd" in the title line. Please see https://github.com/angular/angular/blob/68a6a07/CONTRIBUTING.md#-commit-message-format for examples'
          excludeTitle: "true"
          checkAllCommitMessages: "true"
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Subject Body Space
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v2.0.0
        with:
          pattern: "^[^\n]+(\n\n.+)?$"
          flags: "s"
          error: "Commit header and body must be separated by one blank line"
          excludeTitle: "true"
          excludeDescription: "true"
          checkAllCommitMessages: "true"
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Subject Message Duplicity
        if: ${{ success() || failure() }}
        run: |
          max_commit=$(git log origin/${{ github.event.pull_request.base.ref }}.. --oneline | cut -c 9- | sort | uniq -c | sort -n | tail -1 | grep -qE '^\s*[1-1]+'; echo $?)
          if [ $max_commit == 0 ]
          then
            echo "Hey All commit looks good. ðŸ‘Œ"
            exit 0
          else
            echo "Commit List:"
            git log origin/${{ github.event.pull_request.base.ref }}.. --oneline | cut -c 9- | sort | uniq -c | sort -n 
            { echo "Hey you have duplicated commit messages, you should reword or squash your commits!" 2>&1 ; exit $max_commit; }
          fi
        shell: bash

      - name: Check Subject Line Length
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: "^.{0,51}(\n.*)*$"
          error: "The maximum line length of 50 characters is exceeded."
          excludeDescription: "true" # optional: this excludes the description body of a pull request
          excludeTitle: "true" # optional: this excludes the title of a pull request
          checkAllCommitMessages: "true" # optional: this checks all commits associated with a pull request
          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true

      - name: Check Subject No Capitalize
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: ".*: [a-z].*"
          error: "Don't capitalize the first letter in the commit subject"
          excludeTitle: "true"
          checkAllCommitMessages: "true"
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Subject No Dot
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: "[^\\.]$"
          error: "Don't use dot (.) at the end of the commit subject"
          excludeTitle: "true"
          checkAllCommitMessages: "true"
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check PR Title
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: "^AB#[0-9]+ (feat|fix|test|docs|chore|style|refactor|ci|cd)\\((back|bees|front|mlflow|ghaction)\\).*"
          error: "Bad PR title, format should be AB#Number type(scope): message"
          excludeTitle: "false"
          excludeDescription: "true"
          checkAllCommitMessages: "false"
          accessToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check PR Title Length
        if: ${{ success() || failure() }}
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: "^.{0,51}(\n.*)*$"
          error: "Bad PR title, the maximum line length of 50 characters is exceeded."
          excludeTitle: "false"
          excludeDescription: "true"
          checkAllCommitMessages: "false"
          accessToken: ${{ secrets.GITHUB_TOKEN }}
# https://dzone.com/articles/counting-duplicate-commit-messages
# https://stackoverflow.com/questions/16974204/how-to-get-commit-history-for-just-one-branch
# https://stackoverflow.com/questions/62334334/get-branch-commits-in-a-github-action
# https://stackoverflow.com/questions/71231042/github-getting-last-20-commits-in-on-master-branch-using-git-log-when-on-another
# https://stackoverflow.com/questions/15993062/bash-scripting-missing
